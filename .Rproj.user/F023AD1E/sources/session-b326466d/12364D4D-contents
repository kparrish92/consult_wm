
### For OSF ready: rework all included visuals 

##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##

syrett_theme <- function() {
  theme(
    axis.text = element_text(colour = "black", family = "Arial", size = 12),
    axis.title = element_text(colour = "black", family = "Arial", size = 12))
} 

## define color palette 
cbPalette <- c("#999999", "#E69F00", "#56B4E9",
               "#009E73", "#F0E442", "#0072B2", 
               "#D55E00", "#CC79A7")


join_df = read.csv(here("data", "tidy", "error_df.csv")) %>% 
  select(-X)

total_category_data = read.csv(here("data", "tidy", "total_category_data.csv"))

showtext_auto()
showtext_opts(dpi = 300)

##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------- Figure 4 -------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##


no_cats_df_desc = total_category_data %>% 
  group_by(group) %>% 
  summarise(mean_cats = mean(total_cats), sd_cats = sd(total_cats))

total_category_data$group <- factor(total_category_data$group, 
                                    levels = 
                                      c("Control", 
                                        "East Asian",
                                        "Southeast Asian",
                                        "South Asian",
                                        "Non-Asian Multilingual",
                                        "English monolingual homogeneous",
                                        "English monolingual diverse"))

total_category_data %>% 
  ggplot(aes(x = total_cats, y = group, fill = group)) + geom_boxplot(outlier.shape = NA) +
  geom_text(data = mutate_if(no_cats_df_desc, is.numeric, round, 2),
            aes(label = paste0(mean_cats, " (", sd_cats, ")"), x = Inf), 
            hjust = "inward", size = 5) + xlim(0, 20) + ylab("Group Name") + 
  theme_minimal() + theme(legend.position = "none")  +
  ggtitle("Average Number of Categories Created per group") +
  scale_fill_manual(values=cbPalette) +
  scale_x_continuous(name="Number of Categories", breaks=c(0,5,10,15), limits=c(0, 20)) + syrett_theme()
  
ggsave(here("plots", "fig4.png"))

##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------- Figure 5 -------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##
##---------------------------------------------------------------------##

error_data_long = join_df %>% 
  pivot_longer(cols = c(2:4), 
               names_to = "error_type", values_to = "error_percentage") %>% 
  mutate(error_percentage = error_percentage/45) %>% 
  group_by(group, error_type) %>% 
  summarize(mean_error = mean(error_percentage),
            sd_error = sd(error_percentage)) 

error_data_long$group <- factor(error_data_long$group, 
                                levels = 
                                  c("English monolingual diverse", 
                                    "English monolingual homogeneous",
                                    "Non-Asian Multilingual",
                                    "South Asian",
                                    "Southeast Asian",
                                    "East Asian",
                                    "Control"))


error_data_long %>% 
  ggplot(aes(x = error_type, y = mean_error, fill = group, position = "dodge")) +
  geom_pointrange(aes(ymin = mean_error - sd_error, ymax = mean_error + sd_error), 
                  shape = 21, 
                  position = position_dodge(width = .6)) + 
  scale_fill_manual(values=cbPalette) + theme_minimal() +
  scale_x_discrete(name ="Error type",  labels = 
                     c("Fifteen", "Five", "Two")) + ylab("Error percentage") + syrett_theme()
  



ggsave(here("plots", "fig5.png"))

